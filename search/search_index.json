{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"AMSET: ab initio scattering and transport","text":""},{"location":"#introduction","title":"Introduction","text":"<p>AMSET is an efficient package for calculating electron lifetimes and transport properties in solid-state materials from first principles. A primary aim of AMSET is to be amenable to high-throughput computational screening. Features of AMSET include:</p> <ul> <li>Inputs obtainable from first-principles calculations. The   primary input for AMSET is an uniform band structure calculation.</li> <li>Scattering rates calculated in the Born approximation using common materials   properties such as phonon frequencies and dielectric constants.</li> <li>Transport properties calculated through the Boltzmann transport equation.</li> <li>Efficient implementation that can run on a personal laptop.</li> </ul> <p>Supported ab initio codes</p> <p>Currently, AMSET only supports VASP calculations, however, additional periodic DFT codes will be added in the future.</p>"},{"location":"#scattering-mechanisms","title":"Scattering Mechanisms","text":"<p>The scattering mechanisms currently implemented in AMSET are:</p> <ul> <li>Acoustic deformation potential scattering</li> <li>Ionized impurity scattering</li> <li>Polar optical phonon scattering</li> <li>Piezoelectric scattering</li> </ul> <p>More information on the formalism for each scattering mechanism is available in the scattering section of the documentation.</p>"},{"location":"#whats-new","title":"What's new?","text":"<p>Track changes to AMSET through the changelog.</p>"},{"location":"#contributing-contact-support","title":"Contributing / Contact / Support","text":"<p>Want to see something added or changed? Some ways to get involved are:</p> <ul> <li>Help us improve the documentation \u2013 tell us where you got stuck and improve   the install process for everyone.</li> <li>Let us know if you'd like to see certain features.</li> <li>Point us to areas of the code that are difficult to understand or use.</li> <li>Contribute code. You can do this by forking   AMSET on Github and submitting   a pull request.</li> </ul> <p>The list of contributors to AMSET can be found here. Read more about contributing code to AMSET here.</p>"},{"location":"changelog/","title":"Change log","text":""},{"location":"changelog/#v051","title":"v0.5.1","text":"<ul> <li>Correction to phonon eigenvector reshaping in <code>phonon_frequency.py</code> by @Shiva-sslg in PR #938</li> <li>Bugfix in variable name by @Grimenes in PR #960</li> </ul>"},{"location":"changelog/#v050","title":"v0.5.0","text":"<p>This version introduces a major bugfix in the calculation of wavefunction overlaps. This can alter transport properties for systems where the band edge is located at a reciprocal zone-boundary and the dominant scattering type is from polar optical phonons. Thanks to \u00d8ven Grimenes for idenitfying this bug and contributing a fix (PR #938, @Grimenes).</p> <p>A new feature has been provided to include non analytical corrections (NAC) in the calculation of the polar optical phonon frequency. More information is provided in the online documentation. Thanks to Sara Shivalingam Goud for providing this feature (PR #931, @Shiva-sslg).</p>"},{"location":"changelog/#v0422","title":"v0.4.22","text":"<p>Fix deformation potentials with spin-polarised materials.</p>"},{"location":"changelog/#v0421","title":"v0.4.21","text":"<p>Fix compatbility with spglib.</p>"},{"location":"changelog/#v0420","title":"v0.4.20","text":"<p>Fix intermittent casting bug.</p>"},{"location":"changelog/#v0419","title":"v0.4.19","text":"<p>Fix numpy deprecations.</p>"},{"location":"changelog/#v0418","title":"v0.4.18","text":"<ul> <li>Fix issue with interpolation package #657   by [@lizhenzhupearl])(https://github.com/lizhenzhupearl).</li> <li><code>eff-mass</code> can now be run on vaspruns without orbital projections.</li> </ul>"},{"location":"changelog/#v0417","title":"v0.4.17","text":"<p>Remove unused desymmetrisation routines.</p>"},{"location":"changelog/#v0416","title":"v0.4.16","text":"<p>AMSET dependencies are now not pinned to specific versions. This should make installing and upgrading a bit easier. Additionally, the quadpy package has been removed as a dependency.</p>"},{"location":"changelog/#v0415","title":"v0.4.15","text":"<p>Bug fixes:</p> <ul> <li>Fixed extraction of polar phonon frequency for VASP 6.</li> </ul>"},{"location":"changelog/#v0414","title":"v0.4.14","text":"<p>Bug fixes:</p> <ul> <li>Fixed extraction of deformation potentials when a deformation calculation has more   bands than the undeformed calculation.</li> </ul>"},{"location":"changelog/#v0413","title":"v0.4.13","text":"<p>Bug fixes:</p> <ul> <li>Fixed interpolation of scattering rates at low doping concentrations.</li> </ul>"},{"location":"changelog/#v0412","title":"v0.4.12","text":"<p>Bug fixes:</p> <ul> <li>Fixed issues in the interpolation of IMP scattering rates.</li> <li>Lineshape plotter now works again.</li> </ul>"},{"location":"changelog/#v0411","title":"v0.4.11","text":"<p>Bug fixes:</p> <ul> <li>Fixed calculation of k-point meshes from k-point differences in <code>amset deform read</code>.</li> </ul>"},{"location":"changelog/#v0410","title":"v0.4.10","text":"<p>Bug fixes:</p> <ul> <li>Fix printing of VBM and CBM band indices in <code>amset deform read</code>.</li> <li>Better handling of symprec option in <code>amset deform read</code>.</li> <li>Make amset compatible with pymatgen v2022</li> </ul>"},{"location":"changelog/#v049","title":"v0.4.9","text":"<p>Enhancements:</p> <ul> <li>Better warnings in plotting module.</li> <li>Support for <code>band_structure_data.json</code> with <code>amset eff-mass</code>.</li> </ul> <p>Bug fixes:</p> <ul> <li>Fixed desymmetrization of spin\u2013orbit coupling (spinor) wave functions.</li> <li>Use <code>eigh</code> rather than <code>eig</code> for transport tensors.</li> </ul>"},{"location":"changelog/#v048","title":"v0.4.8","text":"<p>Bug fixes:</p> <ul> <li>Fixed a number of issues in extracting deformation potentials. amset now attempts   to handle cases where the reciprocal and k-space lattices belong to difference   classes.</li> </ul>"},{"location":"changelog/#v047","title":"v0.4.7","text":"<p>Changes:</p> <ul> <li>Default of <code>zero_weighted_kpoints</code> option has been changed from <code>keep</code> to <code>prefer</code>.</li> <li><code>acceptor_charge</code> and <code>donor_charge</code> options have been merged into a single option,   <code>defect_charge</code>.</li> </ul> <p>Enhancements:</p> <ul> <li>Added <code>--bands</code> option to <code>amset wave</code> to allow selecting specific band ranges.</li> </ul> <p>Bug fixes:</p> <ul> <li>Fixed the calculation of ionized impurity concentration in bipolar materials and for   charge states != 1.</li> <li>Fixed the calculation of spin-orbit wave function overlaps.</li> <li>Fixed warning messages in extraction of wave function coefficients.</li> <li>Clarified <code>phonon_frequency</code> output.</li> </ul>"},{"location":"changelog/#v046","title":"v0.4.6","text":"<p>Enhancements:</p> <ul> <li><code>--stats</code> option added to band plotter that prints the effective masses and band   structure information.</li> </ul> <p>Bug fixes:</p> <ul> <li>Fixed extracting wavefunction coefficients in systems with zero weighted k-points.</li> </ul>"},{"location":"changelog/#v045","title":"v0.4.5","text":"<p>Enhancements:</p> <ul> <li><code>--gnuplot</code> option added to transport plotter to allow writing the plot data to simple   text files.</li> </ul>"},{"location":"changelog/#v044","title":"v0.4.4","text":"<p>Enhancements:</p> <ul> <li>Amset can now be run from a band_structure_data.json file. This should contain the   keys \"band_structure\" and \"nelect\".</li> </ul> <p>Bug fixes:</p> <ul> <li>Improved support for spin-polarized calculations.</li> <li>Fixed projection overlaps.</li> </ul>"},{"location":"changelog/#v043","title":"v0.4.3","text":"<p>Enhancements:</p> <ul> <li><code>--n-type</code> and <code>--p-type</code> options added to transport, mobility, and convergence plotters.</li> <li>Power factor added to transport and convergence plotters.</li> </ul> <p>Bug fixes:</p> <ul> <li>Fix for mean free path scattering (@kbspooner).</li> <li>Fix for piezoelectric scattering.</li> <li>Fix for <code>cache_wavefunction = False</code> with non-SOC wavefunctions.</li> <li>Specify numba version for interoperability with interpolation package.</li> </ul>"},{"location":"changelog/#v042","title":"v0.4.2","text":"<p>New features:</p> <ul> <li>Added tool to plot transport properties (<code>amset plot transport</code>).</li> <li>Added tool to plot mobility in more detail (<code>amset plot mobility</code>).</li> <li>Added tool to plot convergence (<code>amset plot convergence</code>).</li> <li>Added option to highlight scattering rates by the derivative of the Fermi\u2013Dirac   thought <code>amset plot rates &lt;filename&gt; --dfde</code>.</li> </ul> <p>Enhancements:</p> <ul> <li>Reduce memory requirements when <code>cache_wavefunction = False</code>.</li> <li>Don't write output files if <code>file_format = None</code>.</li> </ul> <p>Bug fixes:</p> <ul> <li>Re-enabled CRTA and MFP scattering.</li> <li>Don't use multiprocessing with basic scatterers.</li> <li>Fix direction dependent effective masses.</li> </ul>"},{"location":"changelog/#v041","title":"v0.4.1","text":"<p>Enhancements:</p> <ul> <li>Faster wave function overlap calculation using numba jit.</li> <li>Better management of memory and error reporting in subprocesses</li> <li>Automatically handle memory errors when caching wave function coefficients.</li> </ul>"},{"location":"changelog/#v040","title":"v0.4.0","text":"<p>New features:</p> <ul> <li>Multiprocessing now used in the calculation of scattering rates. Number of processes   controlled using the <code>nworkers</code> option.</li> </ul> <p>Bug fixes:</p> <ul> <li>More robust extraction of deformation potentials.</li> <li>Only use ascii characters in output log files.</li> </ul>"},{"location":"changelog/#v033","title":"v0.3.3","text":"<p>New features:</p> <ul> <li>Enable amset to handle systems containing a single k-point in a certain direction   (useful for 2D materials).</li> </ul>"},{"location":"changelog/#v032","title":"v0.3.2","text":"<p>Bug fixes:</p> <ul> <li>Fixed a bug in extracting deformation potentials introduced in version 0.3.1.</li> </ul>"},{"location":"changelog/#v031","title":"v0.3.1","text":"<p>New features:</p> <ul> <li><code>free_carrier_screening</code> option to allow free carriers to screen polar optical and   piezoelectric scattering rates (see docs for me details).</li> </ul> <p>Bug fixes:</p> <ul> <li>Fixed a bug in extracting deformation potentials introduced in version 0.3.0.</li> </ul>"},{"location":"changelog/#v030","title":"v0.3.0","text":"<p>New features:</p> <ul> <li><code>cache_wavefunction</code> option to control memory demand (see docs for more details).</li> <li>Revtex plot style support. Enabled by adding <code>--style revtex</code> to the end of   plotting commands.</li> <li>Support for spin\u2013orbit coupling.</li> <li>Support for non-Gamma centered k-point meshes.</li> <li>Ability to extract deformation potential for specific bands.</li> <li><code>zero_weighted_kpoints</code> option to control processing of zero-weighted k-points   (see the docs for more details).</li> </ul> <p>Enhancements:</p> <ul> <li>Revamped lineshape plotter.</li> <li>Massive (~100x) speedup for calculating polar optical phonon frequency.</li> <li>Better handling of Fermi levels from VASP band structures.</li> <li>Speed up effective mass calculation, and cases where only basic scatterers are used.</li> </ul>"},{"location":"changelog/#v022","title":"v0.2.2","text":"<p>Fix PyPi installation.</p>"},{"location":"changelog/#v021","title":"v0.2.1","text":"<p>Fix GitHub releases.</p>"},{"location":"changelog/#v020","title":"v0.2.0","text":"<p>Major update with many new features:</p> <ul> <li>Elastic, dielectric, and piezoelectric tensors are now supported.</li> <li>Wave function coefficients are now desymmetrised on the fly, meaning   <code>wavefunction.h5</code> files are much smaller.</li> <li>New tool to extract wave function coefficients that removes the <code>pawpyseed</code>   requirement and is much faster. This is a python only implementation and doesn't   require compiling any additional codes.</li> <li>Mesh properties (scattering rates etc, energies, velocities) stored in a separate   mesh.h5 file which is much smaller and faster to read.</li> <li>Revamped unit tests.</li> </ul> <p>Lots of bug fixes, including fixing compatibility with quadpy.</p>"},{"location":"changelog/#v013","title":"v0.1.3","text":"<p>Bug fix for latest quadpy version.</p>"},{"location":"changelog/#v012","title":"v0.1.2","text":"<p>Fix pypi description.</p>"},{"location":"changelog/#v011","title":"v0.1.1","text":"<p>Add release and packaging support.</p>"},{"location":"changelog/#v010","title":"v0.1.0","text":"<p>Initial release containing:</p> <ul> <li><code>amset</code> command line tool</li> <li>Ionized impurity, acoustic deformation potential, piezeoelectric, and polar   optical phonon scattering.</li> <li>Quantum mechanical wave function overlaps.</li> <li>Modified tetrahedron integration.</li> </ul>"},{"location":"changelog/#v000","title":"v0.0.0","text":"<p>Project created.</p>"},{"location":"contributing/","title":"Contributing to AMSET","text":"<p>We love your input! We want to make contributing to AMSET as easy and transparent as possible, whether it's:</p> <ul> <li>Reporting a bug</li> <li>Discussing the current state of the code</li> <li>Submitting a fix</li> <li>Proposing or implementing new features</li> <li>Becoming a maintainer</li> </ul>"},{"location":"contributing/#reporting-bugs-getting-help-and-discussion","title":"Reporting bugs, getting help, and discussion","text":"<p>AMSET code is still in heavy development, so we do not yet have a Google Group. However, feel free at any time to submit questions or bugs to the amset Discourse forum.</p> <p>If you are making a bug report, incorporate as many elements of the following as possible to ensure a timely response and avoid the need for followups:</p> <ul> <li>A quick summary and/or background</li> <li>Steps to reproduce - be specific! Provide sample code.</li> <li>What you expected would happen, compared to what actually happens</li> <li>The full stack trace of any errors you encounter</li> <li>Notes (possibly including why you think this might be happening, or steps you tried that didn't work)</li> </ul> <p>We love thorough bug reports as this means the development team can make quick and meaningful fixes. When we confirm your bug report, we'll move it to the GitHub issues where its progress can be further tracked.</p>"},{"location":"contributing/#contributing-code-modifications-or-additions-through-github","title":"Contributing code modifications or additions through Github","text":"<p>We use github to host code, to track issues and feature requests, as well as accept pull requests. We are currently working on compiling our list of contributors.</p> <p>Pull requests are the best way to propose changes to the codebase. Follow the Github flow for more information on this procedure.</p> <p>The basic procedure for making a PR is: * Fork the repo and create your branch from main. * Commit your improvements to your branch and push to your Github fork (repo). * When you're finished, go to your fork and make a Pull Request. It will automatically update if you need to make further changes.</p>"},{"location":"contributing/#how-to-make-a-great-pull-request","title":"How to Make a Great Pull Request","text":"<p>We have a few tips for writing good PRs that are accepted into the main repo:</p> <ul> <li>Use the Google Code style for all of your code. Find an example   here</li> <li>Your code should have (4) spaces instead of tabs.</li> <li>If needed, update the documentation.</li> <li>Write tests for new features! Good tests are 100%, absolutely necessary   for good code. We use the python <code>unittest</code> framework -- see some of the   other tests in this repo for examples, or review the   Hitchhiker's guide to python   for some good resources on writing good tests.</li> <li>Understand your contributions will fall under the same license as this repo.</li> </ul> <p>When you submit your PR, our CI service will automatically run your tests. We welcome good discussion on the best ways to write your code, and the comments on your PR are an excellent area for discussion.</p>"},{"location":"contributing/#references","title":"References","text":"<p>This document was adapted from the open-source contribution guidelines for Facebook's Draft, as well as briandk's contribution template.</p>"},{"location":"contributors/","title":"Contributors","text":"<p>AMSET development is led by the Hacking Materials research group led by Anubhav Jain at Lawrence Berkeley National Lab, using primarily research funding from U.S. Department of Energy Early Career program.</p> <p>Alex Ganose is the primary developer.</p> <p>Other contributions are provided by:</p> <ul> <li>Junsoo Park and Alireza Faghaninia through the research group of A. Jain at LBNL.</li> <li>Kieran Spooner through the research group of David Scanlon at University College London.</li> <li>Francesco Ricci through the research group of Prof. Geoffroy Hautier at UC Louvain.</li> <li>Jason Frost</li> <li>\u00d8ven Andreas Grimenes through the research group of Kristian Berland at Norwegian University of Life Sciences.</li> <li>Sara Shivalingam Goud</li> </ul>"},{"location":"inputs/","title":"Calculation Inputs","text":""},{"location":"inputs/#calculation-inputs","title":"Calculation Inputs","text":""},{"location":"inputs/#structural-relaxation","title":"Structural relaxation","text":"<p>In order to obtain accurate results, the crystal structure should first be relaxed using \"tight\" calculation settings including high force and energy convergence criteria. Note, that this can often be expensive for very large structures.</p> <p>VASP settings for tight convergence </p> <pre><code>ADDGRID = True\nEDIFF = 1E-8\nEDIFFG = -5E-4\nPREC = Accurate\nNSW = 100\nISIF = 3\nNELMIN = 5\n</code></pre>"},{"location":"inputs/#dense-uniform-band-structure-and-wave-function-coefficients","title":"Dense uniform band structure and wave function coefficients","text":"<p>AMSET should be run on a <code>vasprun.xml</code> file from a \"dense\" uniform band structure calculation. Typically a k-point mesh density at least twice that needed to converge the total energy will be necessary to converge transport properties. Note this refers to the initial DFT mesh before Fourier interpolation. In order to obtain accurate band gaps often a hybrid DFT functional such as HSE06 is required.</p> <p>Wave function coefficients are required to calculate wave function overlaps. This requires the <code>WAVECAR</code> file to be written by VASP (achieved by setting <code>LWAVE = True</code>). Wave function coefficients can then be extracted using the <code>amset wave</code> command. Coefficients are stored in the <code>wavefunction.h5</code> file.</p> <p>VASP settings for uniform calculations </p> <pre><code>ADDGRID = True\nEDIFF = 1E-8\nPREC = Accurate\nNSW = 1\nLWAVE = True\n</code></pre>"},{"location":"inputs/#elastic-constants","title":"Elastic constants","text":"<p>Elastic constants can be calculated using finite differences in VASP. It is very important to first relax the structure using tight convergence settings, as described in the structural relaxation section. Details on the finite difference approach in VASP can be found on the IBRION documentation page.</p> <p>VASP settings for elastic constants </p> <pre><code>ADDGRID = True\nEDIFF = 1E-8\nPREC = Accurate\nNSW = 1\nIBRION = 6\nISIF = 3\n</code></pre>"},{"location":"inputs/#deformation-potentials","title":"Deformation potentials","text":"<p>The absolute deformation potential describes the change in energy of the bands with change in  volume and is calculated as Dnk=\u03b4\u03b5nk/\u03b4S\u03b1\u03b2\\mathbf{D}_{n\\mathbf{k}} = \\delta \\varepsilon_{n\\mathbf{k}} / \\delta S_{\\alpha\\beta}Dnk\u200b=\u03b4\u03b5nk\u200b/\u03b4S\u03b1\u03b2\u200b where S\\mathbf{S}S is the uniform stress tensor. The deformation potential should be averaged over contraction (\u20130.5 %) and expansion (+0.5 %) of the lattice and calculated separately for each component of the strain tensor. To account for shifts in the average electrostatic potential between deformed cells, the eigenvalues are aligned to the average energy level of the core states.</p> <p>AMSET includes a tool to assist with the calculation of the deformation potentials. The initial input is a \"tight\" optimised structure as described in the structural relaxation section. Deformed structures are generated using the <code>amset deform create</code> command, which will generate a list of POSCARs each corresponding to a component of the strain tensor. Note that symmetry is automatically used to reduce the number of calculations needed. A single point calculation (no relaxation, i.e., <code>NSW = 0</code>) should be performed for each deformed POSCAR as well as the undeformed structure.</p> <p>VASP settings for deformation calculations </p> <pre><code>ADDGRID = True\nEDIFF = 1E-8\nPREC = Accurate\nNSW = 1\nICORELEVEL = 1  # needed to write the core levels to OUTCAR\n</code></pre> <p>The deformation potentials can be calculated using the <code>amset deform read</code> command. This requires the paths to the undeformed and deformation calculations as inputs. The undeformed folder should be specified first, followed by the deformation folders. For example,</p> <pre><code>amset deform read undeformed def-1 def-2 def-3\n</code></pre> <p>This will write the deformations potentials to a <code>deformation.h5</code> file in the current directory. You can specify to use this file when calculating scattering rates by setting the <code>deformation_potential</code> option to <code>\"deformation.h5\"</code>. See the settings page for more details.</p>"},{"location":"inputs/#dielectric-constants-piezoelectric-constants-and-polar-phonon-frequency","title":"Dielectric constants, piezoelectric constants and polar-phonon frequency","text":"<p>Static and high-frequency dielectric constants, piezoelectric constants, and the \"effective polar phonon frequency\" can be obtained using density functional perturbation theory (DFPT). It is very important to first relax the structure using tight convergence settings, as described in the structural relaxation section. Details on DFPT in VASP can be found on the IBRION and LEPSILON documentation pages.</p> <p>VASP settings for dielectric constants and phonon frequency </p> <pre><code>ADDGRID = True\nEDIFF = 1E-8\nPREC = Accurate\nNSW = 1\nIBRION = 8\nLEPSILON = True\n</code></pre> <p>Note, DFPT cannot be used with hybrid exchange-correlation functionals. In these cases the LCALCEPS flag should be used in combination with <code>IBRION = 6</code>.</p> <p>Non-Analytical Term Correction (NAC) for Polar Materials</p> <p>In polar materials, LO-TO splitting in the phonon dispersion is significant, and to observe this in phonon dispersion, we have to add a non-analytical term correction (NAC) to the dynamical matrix and re-calculate the phonon frequencies. This treatment is done automatically inside VASP using the LPHON_POLAR = .TRUE. tag and specifying the dielectric tensor using PHON_DIELECTRIC tag along with the Born effective charges using PHON_BORN_CHARGES tag. This step should be performed after obtaining the Born effective charges and dielectric constants from a previous DFPT calculation (e.g. as described above).</p> <p>VASP settings for dielectric constants and phonon frequency </p> <pre><code>ADDGRID = True\nEDIFF = 1E-8\nPREC = Accurate\nNSW = 1\nIBRION = 6\nLPHON_DISPERSION = .TRUE.\nPHON_NWRITE = -3\nLPHON_POLAR = .TRUE.\nPHON_DIELECTRIC = [values]\nPHON_BORN_CHARGES = [values]\n</code></pre> <p>The dielectric constants and polar phonon frequency can be extracted from the VASP outputs using the command: <pre><code>amset phonon-frequency\n</code></pre> The command should be run in a folder containing the <code>vasprun.xml</code> and <code>OUTCAR</code> file output from the DFPT calculation. For polar materials, an <code>OUTCAR</code> from the NAC calculaiton must be provided instead (see above).</p> <p>The effective phonon frequency is determined from the phonon frequencies \u03c9q\u03bd\\omega_{\\mathbf{q}\\nu}\u03c9q\u03bd\u200b (where \u03bd\\nu\u03bd is a phonon branch and q\\mathbf{q}q is a phonon wave vector) and eigenvectors e\u03ba\u03bd(q)\\mathbf{e}_{\\kappa\\nu}(\\mathbf{q})e\u03ba\u03bd\u200b(q) (where \u03ba\\kappa\u03ba is an atom in the unit cell). In order to capture scattering from the full phonon band structure in a single phonon frequency, each phonon mode is weighted by the dipole moment it produces according to <p>w\u03bd=\u2211\u03ba[1M\u03ba\u03c9q\u03bd]1/2\u00d7[q\u22c5Z\u03ba\u2217\u22c5e\u03ba\u03bd(q)] w_{\\nu} = \\sum_\\kappa \\left [ \\frac{1}{M_\\kappa \\omega_{\\mathbf{q}\\nu}} \\right]^{1/2} \\times \\left[ \\mathbf{q} \\cdot \\mathbf{Z}_\\kappa^* \\cdot \\mathbf{e}_{\\kappa\\nu}(\\mathbf{q}) \\right ] w\u03bd\u200b=\u03ba\u2211\u200b[M\u03ba\u200b\u03c9q\u03bd\u200b1\u200b]1/2\u00d7[q\u22c5Z\u03ba\u2217\u200b\u22c5e\u03ba\u03bd\u200b(q)]</p> where Z\u03ba\u2217\\mathbf{Z}_\\kappa^*Z\u03ba\u2217\u200b is the Born effective charge. This naturally suppresses the contributions from transverse-optical and acoustic modes in the same manner as the more general formalism for computing Fr\u00f6lich based electron-phonon coupling.</p> <p>The weight is calculated only for \u0393\\Gamma\u0393-point phonon frequencies and averaged over the full unit sphere to capture both the polar divergence at q\u21920\\mathbf{q} \\rightarrow 0q\u21920 and any anisotropy in the dipole moments. The effective phonon frequency is calculated as the weighted sum over all \u0393\\Gamma\u0393-point phonon modes according to <p>\u03c9po=\u03c9\u0393\u03bdw\u03bd\u2211\u03bdw\u03bd. \\omega_\\mathrm{po} = \\frac{\\omega_{\\Gamma\\nu} w_{\\nu}}{\\sum_{\\nu} w_\\nu}. \u03c9po\u200b=\u2211\u03bd\u200bw\u03bd\u200b\u03c9\u0393\u03bd\u200bw\u03bd\u200b\u200b.</p></p>"},{"location":"installation/","title":"Installation","text":"<p>AMSET is a Python 3.8+ package and requires a typical scientific Python stack. AMSET can be installed using the Python package manager \"Pip\", which will automatically setup other Python packages as required:</p> <pre><code>pip install amset\n</code></pre> <p>If not installing from inside a virtual environment or conda environment, you may need to specify to install as a user via:</p> <pre><code>pip install amset --user\n</code></pre>"},{"location":"installation/#developer-installation","title":"Developer Installation","text":"<p>To install an editable version of AMSET, first clone the repository from GitHub, then install using pip:</p> <pre><code>git clone https://github.com/hackingmaterials/amset.git\ncd amset\npip install -e .\n</code></pre>"},{"location":"installation/#installing-amset-on-nersc","title":"Installing AMSET on NERSC","text":"<p>The BolzTraP2 dependency requires some configuration to be installed properly on CRAY systems. Accordingly, AMSET can be installed using:</p> <pre><code>CXX=icpc CC=icc pip install amset\n</code></pre>"},{"location":"license/","title":"License","text":"<p>Amset Copyright (c) 2015, The Regents of the University of California, through Lawrence Berkeley National Laboratory (subject to receipt of any required approvals from the U.S. Dept. of Energy). All rights reserved.</p> <p>Redistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met:</p> <p>(1) Redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer.</p> <p>(2) Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the distribution.</p> <p>(3) Neither the name of the University of California, Lawrence Berkeley National Laboratory, U.S. Dept. of Energy nor the names of its contributors may be used to endorse or promote products derived from this software without specific prior written permission.</p> <p>THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.</p> <p>You are under no obligation whatsoever to provide any bug fixes, patches, or upgrades to the features, functionality or performance of the source code (\"Enhancements\") to anyone; however, if you choose to make your Enhancements available either publicly, or directly to Lawrence Berkeley National Laboratory or its contributors, without imposing a separate written license agreement for such Enhancements, then you hereby grant the following license: a  non-exclusive, royalty-free perpetual license to install, use, modify, prepare derivative works, incorporate into other computer software, distribute, and sublicense such enhancements or derivative works thereof, in binary and source code form.</p>"},{"location":"scattering/","title":"Scattering Rates","text":""},{"location":"scattering/#calculating-scattering-rates","title":"Calculating scattering rates","text":"<p>AMSET calculates mode dependent scattering rates within the Born approximation using common materials parameters. The differential scattering rate from state \u2223nk\u27e9\\mathinner{|n\\mathbf{k}\\rangle}\u2223nk\u27e9 to state \u2223mk+q\u27e9\\mathinner{|m\\mathbf{k} + \\mathbf{q}\\rangle}\u2223mk+q\u27e9 is calculated using Fermi's golden rule as</p> <p>\u03c4~nk\u2192mk+q\u22121=2\u03c0\u210f\u2223gnm(k,q)\u22232\u03b4(\u03b5nk\u2212\u03b5mk+q),     \\tilde{\\tau}_{n\\mathbf{k}\\rightarrow m\\mathbf{k}+\\mathbf{q}}^{-1} =         \\frac{2\\pi}{\\hbar} \\lvert g_{nm}(\\mathbf{k}, \\mathbf{q}) \\rvert^2         \\delta(\\varepsilon_{n\\mathbf{k}} -         \\varepsilon_{m\\mathbf{k}+\\mathbf{q}}), \u03c4~nk\u2192mk+q\u22121\u200b=\u210f2\u03c0\u200b\u2223gnm\u200b(k,q)\u22232\u03b4(\u03b5nk\u200b\u2212\u03b5mk+q\u200b),</p> <p>where \u03b5nk\\varepsilon_{n\\mathbf{k}}\u03b5nk\u200b is the energy of state \u2223nk\u27e9\\mathinner{|n\\mathbf{k}\\rangle}\u2223nk\u27e9, and gnm(k,q)g_{nm}(\\mathbf{k}, \\mathbf{q})gnm\u200b(k,q) is the matrix element for scattering from state \u2223nk\u27e9\\mathinner{|n\\mathbf{k}\\rangle}\u2223nk\u27e9 into state \u2223mk+q\u27e9\\mathinner{|m\\mathbf{k} + \\mathbf{q}\\rangle}\u2223mk+q\u27e9.</p> <p>Info</p> <p>Note, this is the expression for elastic scattering. Inelastic scattering contains addition terms, as detailed in the elastic vs inelastic scattering section.</p> <p>The overall mode-dependent scattering rate is obtained by integrating the scattering rates over the full Brillouin zone.  In this section, we report the matrix elements for each scattering mechanism implemented in AMSET. Information on calculating transport properties is given in the transport properties section.</p>"},{"location":"scattering/#summary-of-scattering-rates","title":"Summary of scattering rates","text":"Mechanism Code Requires Type Acoustic deformation potential scattering ADP n- and p-type deformation potential,  elastic constant Elastic Piezoelectric scattering PIE high-frequency dielectric constant, elastic constant, piezoelectric coefficient (e\\mathbf{e}e) Elastic Polar optical phonon scattering POP polar optical phonon frequency, static and high-frequency dielectric constants Inelastic Ionized impurity scattering IMP static dielectric constant Elastic"},{"location":"scattering/#acoustic-deformation-potential-scattering","title":"Acoustic deformation potential scattering","text":"<p>The acoustic deformation potential matrix element is given by <p>gnmad(k,q)=kBT\u2211G\u2260\u2212q[D~nk:S^lcl\u03c1+D~nk:S^t1ct1\u03c1+D~nk:S^t2ct2\u03c1]\u27e8mk+q\u2223ei(q+G)\u22c5r\u2223nk\u27e9, g_{nm}^\\mathrm{ad}(\\mathbf{k}, \\mathbf{q}) =    \\sqrt{k_\\mathrm{B} T}  \\sum_{\\mathbf{G} \\neq -\\mathbf{q}} \\left[         \\frac{\\mathbf{\\tilde{D}}_{n\\mathbf{k}} \\mathbin{:} \\mathbf{\\hat{S}}_l}{c_l\\sqrt{\\rho}} +         \\frac{\\mathbf{\\tilde{D}}_{n\\mathbf{k}} \\mathbin{:} \\mathbf{\\hat{S}}_{t_1}}{c_{t_1}\\sqrt{\\rho}} +         \\frac{\\mathbf{\\tilde{D}}_{n\\mathbf{k}} \\mathbin{:} \\mathbf{\\hat{S}}_{t_2}}{c_{t_2}\\sqrt{\\rho}}     \\right]     \\mathinner{\\langle m\\mathbf{k}+\\mathbf{q} \\left | e^{i(\\mathbf{q} + \\mathbf{G})\\cdot\\mathbf{r}} \\right | n\\mathbf{k} \\rangle}, gnmad\u200b(k,q)=kB\u200bT\u200bG\ue020=\u2212q\u2211\u200b[cl\u200b\u03c1\u200bD~nk\u200b:S^l\u200b\u200b+ct1\u200b\u200b\u03c1\u200bD~nk\u200b:S^t1\u200b\u200b\u200b+ct2\u200b\u200b\u03c1\u200bD~nk\u200b:S^t2\u200b\u200b\u200b]\u27e8mk+q\u2223\u2223\u200bei(q+G)\u22c5r\u2223\u2223\u200bnk\u27e9,</p> where D~nk=Dnk+vnk\u2297vnk\\mathbf{\\tilde{D}}_{n\\mathbf{k}} = \\mathbf{D}_{n\\mathbf{k}} + \\mathbf{v}_{n\\mathbf{k}} \\otimes \\mathbf{v}_{n\\mathbf{k}}D~nk\u200b=Dnk\u200b+vnk\u200b\u2297vnk\u200b in which Dnk\\mathbf{D}_{n\\mathbf{k}}Dnk\u200b is the rank 2 deformation potential tensor,  S^=q^\u2297u^\\mathbf{\\hat{S}} = \\mathbf{\\hat{q}}\\otimes\\mathbf{\\hat{u}}S^=q^\u200b\u2297u^ is the unit strain associated with an acoustic mode, u^\\mathbf{\\hat{u}}u^ is the unit vector of phonon polarization, and the subscripts lll, t1t_1t1\u200b, and t2t_2t2\u200b indicate properties belonging to the longitudinal and transverse modes.</p> <ul> <li>Abbreviation: APD</li> <li>Type: Elastic</li> <li>References: <sup>3</sup>, <sup>2</sup>, <sup>1</sup></li> <li>Requires: <code>deformation_potential</code>, <code>elastic_constant</code></li> </ul>"},{"location":"scattering/#piezoelectric-scattering","title":"Piezoelectric scattering","text":"<p>The piezoelectric differential scattering rate is given by</p> <p><p>gnmpi(k,q)=kBT\u2211G\u2260\u2212q[n^h:S^lcl\u03c1+n^h:S^t1ct1\u03c1+n^h:S^t2ct2\u03c1]\u27e8mk+q\u2223ei(q+G)\u22c5r\u2223nk\u27e9\u2223q+G\u2223, g_{nm}^\\mathrm{pi}(\\mathbf{k}, \\mathbf{q}) =    \\sqrt{k_\\mathrm{B} T} \\sum_{\\mathbf{G} \\neq -\\mathbf{q}}  \\left[         \\frac{\\mathbf{\\hat{n}} \\mathbf{h} \\mathbin{:} \\mathbf{\\hat{S}}_l}{c_l\\sqrt{\\rho}} +         \\frac{\\mathbf{\\hat{n}} \\mathbf{h} \\mathbin{:} \\mathbf{\\hat{S}}_{t_1}}{c_{t_1}\\sqrt{\\rho}} +         \\frac{\\mathbf{\\hat{n}} \\mathbf{h} \\mathbin{:} \\mathbf{\\hat{S}}_{t_2}}{c_{t_2}\\sqrt{\\rho}}     \\right ]     \\frac{\\mathinner{\\langle m\\mathbf{k}+\\mathbf{q} \\left | e^{i(\\mathbf{q} + \\mathbf{G})\\cdot\\mathbf{r}} \\right | n\\mathbf{k} \\rangle}}          {\\left | \\mathbf{q} + \\mathbf{G} \\right |}, gnmpi\u200b(k,q)=kB\u200bT\u200bG\ue020=\u2212q\u2211\u200b[cl\u200b\u03c1\u200bn^h:S^l\u200b\u200b+ct1\u200b\u200b\u03c1\u200bn^h:S^t1\u200b\u200b\u200b+ct2\u200b\u200b\u03c1\u200bn^h:S^t2\u200b\u200b\u200b]\u2223q+G\u2223\u27e8mk+q\u2223\u2223\u200bei(q+G)\u22c5r\u2223\u2223\u200bnk\u27e9\u200b,</p> where h\\mathbf{h}h is the full piezoelectric stress tensor and n^=(q+G)/\u2223q+G\u2223\\mathbf{\\hat{n}} = (\\mathbf{q} + \\mathbf{G}) / \\left | \\mathbf{q} + \\mathbf{G} \\right |n^=(q+G)/\u2223q+G\u2223 is a unit vector in the direction of scattering.</p> <ul> <li>Abbreviation: PIE</li> <li>Type: Elastic</li> <li>References: <sup>1</sup></li> <li>Requires: <code>piezoelectric_coefficient</code>, <code>static_dielectric</code></li> </ul>"},{"location":"scattering/#polar-optical-phonon-scattering","title":"Polar optical phonon scattering","text":"<p>The polar optical phonon differential scattering rate is given by</p> <p>gnmpo(k,q)=[\u210f\u03c9po2]1/2\u2211G\u2260\u2212q(1n^\u22c5\u03f5\u221e\u22c5n^\u22121n^\u22c5\u03f5s\u22c5n^)12\u27e8mk+q\u2223ei(q+G)\u22c5r\u2223nk\u27e9\u2223q+G\u2223, g_{nm}^\\mathrm{po}(\\mathbf{k}, \\mathbf{q}) =     \\left [ \\frac{\\hbar \\omega_\\mathrm{po}}{2} \\right ] ^ {1/2}     \\sum_{\\mathbf{G} \\neq -\\mathbf{q}}         \\left (\\frac{1}{\\mathbf{\\hat{n}}\\cdot\\boldsymbol{\\epsilon}_\\infty\\cdot\\mathbf{\\hat{n}}} - \\frac{1}{\\mathbf{\\hat{n}}\\cdot\\boldsymbol{\\epsilon}_\\mathrm{s}\\cdot\\mathbf{\\hat{n}}}\\right)          ^\\frac{1}{2}     \\frac{\\mathinner{\\langle m\\mathbf{k}+\\mathbf{q} \\left | e^{i(\\mathbf{q} + \\mathbf{G})\\cdot\\mathbf{r}} \\right | n\\mathbf{k} \\rangle}}          {\\left | \\mathbf{q} + \\mathbf{G} \\right |}, gnmpo\u200b(k,q)=[2\u210f\u03c9po\u200b\u200b]1/2G\ue020=\u2212q\u2211\u200b(n^\u22c5\u03f5\u221e\u200b\u22c5n^1\u200b\u2212n^\u22c5\u03f5s\u200b\u22c5n^1\u200b)21\u200b\u2223q+G\u2223\u27e8mk+q\u2223\u2223\u200bei(q+G)\u22c5r\u2223\u2223\u200bnk\u27e9\u200b,</p> <p>where  \u03f5s\\boldsymbol{\\epsilon}_\\mathrm{s}\u03f5s\u200b and \u03f5\u221e\\boldsymbol{\\epsilon}_\\infty\u03f5\u221e\u200b are the static and high-frequency dielectric tensors and \u03c9po\\omega_\\mathrm{po}\u03c9po\u200b is the polar optical phonon frequency. To capture scattering from the full phonon band structure in a single phonon frequency, each phonon mode is weighted by the dipole moment it produces.</p> <ul> <li>Abbreviation: POP</li> <li>Type: Inelastic</li> <li>References: <sup>5</sup>, <sup>6</sup>, <sup>1</sup></li> <li>Requires: <code>pop_frequency</code>, <code>static_dielectric</code>, <code>high_frequency_dielectric</code></li> </ul>"},{"location":"scattering/#ionized-impurity-scattering","title":"Ionized impurity scattering","text":"<p>The ionized impurity matrix element is given by <p>gnmii(k,q)=\u2211G\u2260\u2212qnii1/2Zen^\u22c5\u03f5s\u22c5n^\u27e8mk+q\u2223ei(q+G)\u22c5r\u2223nk\u27e9\u2223q+G\u22232+\u03b22, g_{nm}^\\mathrm{ii}(\\mathbf{k}, \\mathbf{q}) =     \\sum_{\\mathbf{G} \\neq -\\mathbf{q}}      \\frac{n_\\mathrm{ii}^{1/2} Z e }{\\mathbf{\\hat{n}} \\cdot \\boldsymbol{\\epsilon}_\\mathrm{s} \\cdot \\mathbf{\\hat{n}}}     \\frac{\\mathinner{\\langle m\\mathbf{k}+\\mathbf{q} \\left | e^{i(\\mathbf{q} + \\mathbf{G})\\cdot\\mathbf{r}} \\right | n\\mathbf{k} \\rangle}}          {\\left | \\mathbf{q} + \\mathbf{G} \\right | ^2 + \\beta^2}, gnmii\u200b(k,q)=G\ue020=\u2212q\u2211\u200bn^\u22c5\u03f5s\u200b\u22c5n^nii1/2\u200bZe\u200b\u2223q+G\u22232+\u03b22\u27e8mk+q\u2223\u2223\u200bei(q+G)\u22c5r\u2223\u2223\u200bnk\u27e9\u200b,</p> where ZZZ is the charge state of the impurity center, niin_\\mathrm{ii}nii\u200b is the concentration of ionized impurities (i.e., C\u00d7(nholes\u2212nelectrons)/ZC \\times (n_\\mathrm{holes} - n_\\mathrm{electrons}) / ZC\u00d7(nholes\u200b\u2212nelectrons\u200b)/Z, where CCC is the amount of charge compensation), and \u03b2\\beta\u03b2 is the inverse screening length, defined as</p> <p>\u03b22=e2\u03f5skBT\u222bd\u03b5V D(\u03b5)f(1\u2212f),     \\beta^2 = \\frac{e^2}{\\epsilon_\\mathrm{s}  k_\\mathrm{B} T}         \\int \\frac{\\mathrm{d}\\varepsilon}{V}\\,D(\\varepsilon) f(1-f), \u03b22=\u03f5s\u200bkB\u200bTe2\u200b\u222bVd\u03b5\u200bD(\u03b5)f(1\u2212f),</p> <p>where VVV is the unit cell volume, DDD is the density of states, and fff is the Fermi\u2013Dirac distribution given in the transport properties section.</p> <ul> <li>Abbreviation: IMP</li> <li>Type: Elastic</li> <li>References: <sup>4</sup>, <sup>1</sup></li> <li>Requires: <code>static_dielectric</code></li> </ul>"},{"location":"scattering/#elastic-vs-inelastic-scattering","title":"Elastic vs inelastic scattering","text":"<p>AMSET treats elastic and inelastic scattering mechanisms separately.</p>"},{"location":"scattering/#inelastic","title":"Inelastic","text":"<p>The  differential scattering rate for inelastic processes is calculated as</p> <p>\u03c4nk\u2192mk+q\u22121=2\u03c0\u210f\u2223gnm(k,q)\u22232\u00d7[(npo+1\u2212fmk+q)\u03b4(\u03b5nk\u2212\u03b5mk+q\u2212\u210f\u03c9po)(npo+fmk+q)\u03b4(\u03b5nk\u2212\u03b5mk+q+\u210f\u03c9po)], \\begin{aligned}     \\tau_{n\\mathbf{k}\\rightarrow m\\mathbf{k}+\\mathbf{q}}^{-1} =         \\frac{2\\pi}{\\hbar} \\lvert g_{nm}(\\mathbf{k}, \\mathbf{q}) \\rvert^2         \\times [ &amp;{} (n_\\mathrm{po} + 1 - f_{m\\mathbf{k} + \\mathbf{q}})         \\delta(\\varepsilon_{n\\mathbf{k}} -  \\varepsilon_{m\\mathbf{k}+\\mathbf{q}} - \\hbar\\omega_\\mathrm{po}) \\\\         &amp;{} (n_\\mathrm{po} + f_{m\\mathbf{k} + \\mathbf{q}})         \\delta(\\varepsilon_{n\\mathbf{k}} -  \\varepsilon_{m\\mathbf{k}+\\mathbf{q}} + \\hbar\\omega_\\mathrm{po})], \\end{aligned} \u03c4nk\u2192mk+q\u22121\u200b=\u210f2\u03c0\u200b\u2223gnm\u200b(k,q)\u22232\u00d7[\u200b(npo\u200b+1\u2212fmk+q\u200b)\u03b4(\u03b5nk\u200b\u2212\u03b5mk+q\u200b\u2212\u210f\u03c9po\u200b)(npo\u200b+fmk+q\u200b)\u03b4(\u03b5nk\u200b\u2212\u03b5mk+q\u200b+\u210f\u03c9po\u200b)],\u200b</p> <p>where \u03c9po\\omega_\\mathrm{po}\u03c9po\u200b is an effective phonon frequency, npo=1/[exp\u2061(\u210f\u03c9po/kBT)\u22121]n_\\mathrm{po} = 1 / [\\exp (\\hbar \\omega_\\mathrm{po} / k_\\mathrm{B} T) - 1]npo\u200b=1/[exp(\u210f\u03c9po\u200b/kB\u200bT)\u22121] denotes the Bose\u2013Einstein distribution of phonons, and the \u2212\u210f\u03c9po-\\hbar \\omega_\\mathrm{po}\u2212\u210f\u03c9po\u200b and +\u210f\u03c9po+\\hbar \\omega_\\mathrm{po}+\u210f\u03c9po\u200b terms correspond to scattering by phonon absorption and emission, respectively.</p> <p>The overall inelastic scattering rate for state \u2223nk\u27e9\\mathinner{|n\\mathbf{k}\\rangle}\u2223nk\u27e9 is calculated as</p> <p>\u03c4nk\u22121=\u2211m\u222bd3q\u03a9\u03c4nk\u2192mk+q\u22121 \\tau^{-1}_{n\\mathbf{k}} = \\sum_m \\int \\frac{\\mathrm{d}^3q}{\\Omega} \\tau_{n\\mathbf{k}\\rightarrow m\\mathbf{k}+\\mathbf{q}}^{-1} \u03c4nk\u22121\u200b=m\u2211\u200b\u222b\u03a9d3q\u200b\u03c4nk\u2192mk+q\u22121\u200b</p> <p>where \u03a9\\Omega\u03a9 is the volume of the Brillouin zone.</p>"},{"location":"scattering/#elastic","title":"Elastic","text":"<p>Elastic rates are calculated using the momentum relaxation time approximation (MRTA), given by</p> <p><p>\u03c4~nk\u22121=\u2211m\u222bd3q\u03a9[1\u2212vnk\u22c5vmk+q\u2223vnk\u22232]\u03c4~nk\u2192mk+q\u22121 \\tilde{\\tau}^{-1}_{n\\mathbf{k}} = \\sum_m \\int \\frac{\\mathrm{d}^3q}{\\Omega}     \\left [ 1 - \\frac{\\mathbf{v}_{n\\mathbf{k}} \\cdot \\mathbf{v}_{m\\mathbf{k} +         \\mathbf{q}}}{\\lvert \\mathbf{v}_{n\\mathbf{k}} \\rvert^2} \\right ]      \\tilde{\\tau}_{n\\mathbf{k}\\rightarrow m\\mathbf{k}+\\mathbf{q}}^{-1} \u03c4~nk\u22121\u200b=m\u2211\u200b\u222b\u03a9d3q\u200b[1\u2212\u2223vnk\u200b\u22232vnk\u200b\u22c5vmk+q\u200b\u200b]\u03c4~nk\u2192mk+q\u22121\u200b</p> where \u03c4~nk\u2192mk+q\u22121\\tilde{\\tau}_{n\\mathbf{k}\\rightarrow m\\mathbf{k}+\\mathbf{q}}^{-1}\u03c4~nk\u2192mk+q\u22121\u200b is the elastic differential scattering rate defined at the top of this page and vnk\\mathbf{v}_{n\\mathbf{k}}vnk\u200b is the group velocity of state \u2223nk\u27e9\\mathinner{|n\\mathbf{k}\\rangle}\u2223nk\u27e9.</p>"},{"location":"scattering/#overlap-integral","title":"Overlap integral","text":"<p>In the Born approximation, the scattering rate equations depend on the wavefunction overlap \u27e8mk+q\u2223ei(q+G)\u22c5r\u2223nk\u27e9\\mathinner{\\langle m\\mathbf{k}+\\mathbf{q} \\left | e^{i(\\mathbf{q} + \\mathbf{G})\\cdot\\mathbf{r}} \\right | n\\mathbf{k} \\rangle}\u27e8mk+q\u2223\u2223\u200bei(q+G)\u22c5r\u2223\u2223\u200bnk\u27e9. AMSET uses pawpyseed to obtain wavefunction coefficients including PAW core regions from the pseudo wavefunction coefficients written by VASP. The wavefunctions coefficient are linearly interpolated onto the mesh used to calculate scattering rates.</p>"},{"location":"scattering/#brillouin-zone-integration","title":"Brillouin zone integration","text":"<p>All scattering rates depend on the Dirac delta function \u03b4\\delta\u03b4, which imposes conservation of energy. Due to finite k-point sampling and numerical noise, it is unlikely that this condition will ever be satisfied exactly. Furthermore, many scattering rates have a 1/\u2223q\u222321 / \\lvert\\mathbf{q}\\rvert ^21/\u2223q\u22232 dependence which requires an extremely dense k-point mesh to achieve convergence.</p> <p>To account for this, AMSET employs a modified tetrahedron integration scheme. AMSET first identifies a constant energy surface by computing tetrahedral cross sections using the tetrahedron method. Next, the constant energy surface is resampled using an ultra-fine mesh of k-points. The wavefunction coefficients and group velocities are reinterpolated into the ultra-fine mesh using linear interpolation and the matrix elements are calculated directly. This methodology allows for significantly faster convergence than the regular tetrahedron method.</p> <p>The methodology for combining rates from multiple scattering mechanisms is given in the transport properties section.</p> <ol> <li> <p>Rode, D. L. Low-field electron transport. Semiconductors and semimetals 10, (Elsevier, 1975).\u00a0\u21a9\u21a9\u21a9\u21a9</p> </li> <li> <p>Shockley, W. &amp; others. Electrons and holes in semiconductors: with applications to transistor electronics. (van Nostrand New York, 1950).\u00a0\u21a9</p> </li> <li> <p>Bardeen, J. &amp; Shockley, W. Deformation potentials and mobilities in non-polar crystals. Phys. Rev. 80, 72-80 (1950).\u00a0\u21a9</p> </li> <li> <p>Dingle, R. B. XCIV. Scattering of electrons and holes by charged donors and acceptors in semiconductors. London, Edinburgh, Dublin Philos. Mag. J. Sci. 46, 831-840 (1955).\u00a0\u21a9</p> </li> <li> <p>Fr\u00f6hlich, H. Electrons in lattice fields. Adv. Phys. 3, 325\u2013361 (1954).\u00a0\u21a9</p> </li> <li> <p>Conwell, E. M. High Field Transport in Semiconductors. Academic Press, New York (1967).\u00a0\u21a9</p> </li> </ol>"},{"location":"settings/","title":"Settings","text":""},{"location":"settings/#settings","title":"Settings","text":"<p>Whether using AMSET via the command-line or python API, the primary controls are contained in the settings file or dictionary. An example AMSET settings file is given here.</p> <p>The settings are grouped into sections. The description for each section and settings parameter is given below.</p> <p>All settings are also controllable via command-line flags. The corresponding command-line interface options are also detailed below. Any settings specified via the command-line will override those in the settings file.</p>"},{"location":"settings/#general-settings","title":"General settings","text":"<p>These settings control the AMSET run, including interpolation density and temperature/doping ranges.</p>"},{"location":"settings/#doping","title":"<code>doping</code>","text":"<p>Command-line option: <code>-d, --doping</code></p> <p>Controls which doping levels (carrier concentrations) to calculate. Concentrations given with the unit cm<sup>\u20133</sup>. Can be specified directly as a comma separated list, e.g.:</p> <pre><code>1E13,1E14,1E15,1E16,1E17,1E18,1E19,1E20\n</code></pre> <p>Alternatively, ranges can be specified using the syntax <code>start:stop:num_steps</code>. For example, the same doping concentrations as above can be written::</p> <pre><code>1E13:1E20:8\n</code></pre> <p>Negative concentrations indicate electrons (n-type doping), positive concentrations indicate holes (p-type doping).</p> <p>Default: <code>['1.e15', '1.e16', '1.e17', '1.e18', '1.e19', '1.e20', '-1.e15', '-1.e16', '-1.e17', '-1.e18', '-1.e19', '-1.e20']</code></p>"},{"location":"settings/#temperatures","title":"<code>temperatures</code>","text":"<p>Command-line option: <code>-t, --temperatures</code></p> <p>Controls which temperatures to calculate. Temperatures given in Kelvin. Can be specified directly as a comma separated list, e.g.::</p> <pre><code>300,400,500,600,700,800,900,1000\n</code></pre> <p>Alternatively, ranges can be specified using the syntax <code>start:stop:num_steps</code>, For example, the same temperature range as above can be written::</p> <pre><code>300:1000:8\n</code></pre> <p>Default: <code>[300]</code></p>"},{"location":"settings/#interpolation_factor","title":"<code>interpolation_factor</code>","text":"<p>Command-line option: <code>-i, --interpolation-factor</code></p> <p>Interpolation factor controlling the interpolation density. Larger numbers indicate greater density. The number of k-points in the interpolated band structure will be roughly equal to <code>interpolation_factor</code> times the number of k-points in the DFT calculation. This is the primary option for controlling the accuracy of the calculated scattering rates. Transport properties should be converged with respect to this parameter.</p> <p>Default: <code>10</code></p>"},{"location":"settings/#scattering_type","title":"<code>scattering_type</code>","text":"<p>Command-line option: <code>-s, --scattering-type</code></p> <p>Which scattering mechanisms to calculate. If set to <code>auto</code>, the scattering mechanisms will automatically be determined based on the specified material parameters. Alternatively, a comma separated list of scattering mechanism can be specified. Options include:</p> <ul> <li><code>ADP</code> (acoustic deformation potential scattering)</li> <li><code>IMP</code> (ionized impurity scattering)</li> <li><code>PIE</code> (piezoelectric scattering)</li> <li><code>POP</code> (polar optical phonon scattering)</li> <li><code>CRT</code> (constant relaxation time)</li> <li><code>MFP</code> (mean free path scattering)</li> </ul> <p>For example, <code>ADP,IMP,POP</code>. The scattering mechanism will only be calculated if all the required material parameters for that mechanism are set. See the <code>scattering section &lt;scattering&gt;</code>_ of the documentation for more details.</p> <p>Default: <code>auto</code></p>"},{"location":"settings/#wavefunction_coefficients","title":"<code>wavefunction_coefficients</code>","text":"<p>Command-line option: <code>-w, --wavefunction-coefficients</code></p> <p>Path to wavefunction coefficients file. The coefficients can be extracted from a VASP WAVECAR using the command:</p> <pre><code>amset wave\n</code></pre> <p>This command also requires the vasprun.xml to be in the same folder.</p> <p>Default: <code>wavefunction.h5</code></p>"},{"location":"settings/#use_projections","title":"<code>use_projections</code>","text":"<p>Command-line option: <code>--use-projections</code></p> <p>Use projections to calculate wavefunction overlap. This can often result in very poor performance, and so is not recommended.</p> <p>In order to use projections, the VASP calculation must be performed with <code>LORBIT = 11</code>.</p> <p>Default: <code>False</code></p>"},{"location":"settings/#scissor","title":"<code>scissor</code>","text":"<p>Command-line option: <code>-s, --scissor</code></p> <p>The amount to scissor the band gap, in eV. Positive values indicate band gap opening, negative values indicate band gap narrowing. Has no effect for metallic systems.</p>"},{"location":"settings/#bandgap","title":"<code>bandgap</code>","text":"<p>Command-line option: <code>-b, --bandgap</code></p> <p>Set the band gap to this value, in eV. Will automatically determine and apply the correct band gap scissor for the specified band gap. Cannot be used in combination with the <code>scissor</code> option. Has no effect for metallic systems.</p>"},{"location":"settings/#zero_weighted_kpoints","title":"<code>zero_weighted_kpoints</code>","text":"<p>Command-line option: <code>-z, --zero-weighted-kpoints</code></p> <p>How to handle \"zero-weighted\" k-points if they are present in the calculation. Options are:</p> <ul> <li>keep: Keep zero-weighted k-points in the band structure.</li> <li>drop: Drop zero-weighted k-points, keeping only the weighted k-points.</li> <li>prefer: Drop weighted-kpoints if zero-weighted k-points are present   in the calculation (useful for cheap hybrid calculations).</li> </ul>"},{"location":"settings/#free_carrier_screening","title":"<code>free_carrier_screening</code>","text":"<p>Command-line option: <code>--free-carrier-screening</code></p> <p>Whether free carriers will screen polar optical phonon and piezoelectric scattering rates. This modifies the matrix elements from a 1\u2223q+G\u2223\\frac{1}{\\left | \\mathbf{q} + \\mathbf{G} \\right |}\u2223q+G\u22231\u200b dependence to a 1\u2223q+G\u2223+\u03b2\u221e\\frac{1}{\\left | \\mathbf{q} + \\mathbf{G} \\right | + \\beta_\\infty}\u2223q+G\u2223+\u03b2\u221e\u200b1\u200b dependence, where \u03b2\u221e\\beta_\\infty\u03b2\u221e\u200b is the inverse screening length that depends on the temperature, carrier concentration, and high-frequency dielectric constant.</p> <p>This can result in a large reduction in the scattering rates at high carrier concentrations.</p> <p>Default: <code>False</code></p>"},{"location":"settings/#material-settings","title":"Material settings","text":"<p>These settings control the materials properties required to calculate the scattering rates.</p>"},{"location":"settings/#high_frequency_dielectric","title":"<code>high_frequency_dielectric</code>","text":"<p>Command-line option: <code>--high-frequency-dielectric</code></p> <p>The high-frequency dielectric constant, in units of \u03f50\\epsilon_0\u03f50\u200b. Can be given as a 3x3 tensor or a single isotropic value.</p> <p>Required for: POP, PIE</p>"},{"location":"settings/#static_dielectric","title":"<code>static_dielectric</code>","text":"<p>Command-line option: <code>--static-dielectric</code></p> <p>The static dielectric constant, in units of \u03f50\\epsilon_0\u03f50\u200b. Can be given as a 3x3 tensor or a single isotropic value.</p> <p>Required for: IMP, POP</p>"},{"location":"settings/#elastic_constant","title":"<code>elastic_constant</code>","text":"<p>Command-line option: <code>--elastic-constant</code></p> <p>The elastic constants as the full 3x3x3x3 tensor or 6x6 Voigt form, in GPa.</p> <p>Alteratively, a single averaged value can be given (not recommended).</p> <p>Required for: ADP, PIE</p>"},{"location":"settings/#deformation_potential","title":"<code>deformation_potential</code>","text":"<p>Command-line option: <code>--deformation-potential</code></p> <p>Path to file containing deformation potentials for all bands, generated using <code>amset deform read</code>.</p> <p>Alternatively, Can be given as a comma separated list of two deformation potentials for the VBM and CBM, respectively in eV, e.g.:</p> <pre><code>8.6, 7.4\n</code></pre> <p>Or a single value to use for all bands in metals.</p> <p>Required for: ADP</p>"},{"location":"settings/#piezoelectric_constant","title":"<code>piezoelectric_constant</code>","text":"<p>command-line option: <code>--piezoelectric-constant</code></p> <p>The piezoelectric constants (e\\mathbf{e}e) in C/m<sup>2</sup> given as either the full 3x3x3 tensor or the 3x6 Voigt form.</p> <p>Required for: PIE</p>"},{"location":"settings/#defect_charge","title":"<code>defect_charge</code>","text":"<p>Command-line option: <code>--defect-charge</code></p> <p>The charge of defects, in units of electron charge.</p> <p>Note: <code>donor_charge</code> and <code>acceptor_charge</code> were amalgamated into a single setting in version 0.5.0.</p> <p>Required for: IMP</p> <p>Default: <code>1</code></p>"},{"location":"settings/#compensation_factor","title":"<code>compensation_factor</code>","text":"<p>Command-line option: <code>--compensation-factor</code></p> <p>The amount of defect compensation to include.</p> <p>The total impurity concentration is calculated as <code>compensation_factor</code> \u00d7(n0\u2212p0)/q\\times (n_0 - p_0) / q\u00d7(n0\u200b\u2212p0\u200b)/q, where (n0\u2212p0)(n_0 - p_0)(n0\u200b\u2212p0\u200b) is the concentration of excess donors or acceptors and qqq is the defect charge.</p> <p>Required for: IMP</p> <p>Default: <code>2</code></p>"},{"location":"settings/#pop_frequency","title":"<code>pop_frequency</code>","text":"<p>Command-line option: <code>--pop-frequency</code></p> <p>The polar optical phonon frequency, in THz. This can be generated from a VASP DFPT calculation using <code>amset phonon-frequency</code>.</p> <p>Required for: POP</p>"},{"location":"settings/#mean_free_path","title":"<code>mean_free_path</code>","text":"<p>Command-line option: <code>--mean-free-path</code></p> <p>Basic version of boundary scattering in which the scattering rate is set to vg/Lv_g / Lvg\u200b/L, where vgv_gvg\u200b is the group velocity and LLL is the mean free path in nm.</p> <p>Required for: MFP</p>"},{"location":"settings/#constant_relaxation_time","title":"<code>constant_relaxation_time</code>","text":"<p>Command-line option: <code>--constant-relaxation-time</code></p> <p>A constant relaxation time to use as the minimum relaxation time for all k-points.</p> <p>It is not recommended to use this option in conjunction with any other scattering rates. Instead, this should be used to compare against results calculated in the constant relaxation time approximation.</p> <p>Required for: CRT</p>"},{"location":"settings/#performance-settings","title":"Performance settings","text":"<p>These settings control the speed and accuracy of calculated properties. In general the defaults should give converged values.</p>"},{"location":"settings/#energy_cutoff","title":"<code>energy_cutoff</code>","text":"<p>Command-line option: <code>--energy-cutoff</code></p> <p>The energy cut-off used to determine which bands to include in the interpolation and scattering rate calculation, in eV.</p> <p>Default: <code>1.5</code></p>"},{"location":"settings/#fd_tol","title":"<code>fd_tol</code>","text":"<p>Command-line option: <code>--fd-tol</code></p> <p>The Fermi\u2013Dirac derivative tolerance that controls which k-points to calculate the scattering for. Given as a percentage from 0 to 1. Larger values indicate that the fewer k-points will be calculated, smaller values indicate a larger portion of the Brillouin zone will be calculated.</p> <p>Default: <code>0.05</code></p>"},{"location":"settings/#dos_estep","title":"<code>dos_estep</code>","text":"<p>Command-line option: <code>--dos-estep</code></p> <p>The energy step for the calculated density of states and transport density of states, in eV. Controls the accuracy of determining the position of the Fermi level and transport properties. Smaller is better but can quickly get more expensive.</p> <p>Default: <code>0.01</code></p>"},{"location":"settings/#symprec","title":"<code>symprec</code>","text":"<p>Command-line option: <code>--symprec</code></p> <p>The symmetry finding tolerance, in \u00c5.</p> <p>Default: <code>0.01</code></p>"},{"location":"settings/#nworkers","title":"<code>nworkers</code>","text":"<p>Command-line option: <code>--nworkers</code></p> <p>Number of processors to use. <code>-1</code> indicates to use all available processors.</p> <p>When using multiprocessing it is recommended to run <code>export OMP_NUM_THREADS=1</code> before running amset.</p> <p>Default: <code>-1</code></p>"},{"location":"settings/#cache_wavefunction","title":"<code>cache_wavefunction</code>","text":"<p>Command-line option: <code>--cache-wavefunction</code></p> <p>Cache interpolated wavefunction coefficients. This means that the coefficients for each band and k-point on the Fourier interpolated k-point mesh are only calculated once. While this can yield a significant speed-up, it also massively increases memory requirements, especially if using a low value of <code>fd_tol</code>, or if the system contains very flat bands.</p> <p>If memory issues occur, it is recommended to set <code>cache_wavefunction</code> to <code>False</code>.</p> <p>Default: <code>True</code></p>"},{"location":"settings/#output-settings","title":"Output settings","text":"<p>These settings control the output files and logging.</p>"},{"location":"settings/#calculate_mobility","title":"<code>calculate_mobility</code>","text":"<p>Command-line option: <code>--calculate-mobility/--no-calculate-mobility</code></p> <p>Whether to calculate n- and p-type carrier mobilities. Has no effect for metallic systems where mobility is not well defined.</p> <p>Default: <code>True</code></p>"},{"location":"settings/#separate_scattering_mobilities","title":"<code>separate_scattering_mobilities</code>","text":"<p>Command-line option: <code>--separate-mobility/--no-separate-mobility</code></p> <p>Whether to report the individual scattering rate mobilities. I.e., the mobility if only that scattering mechanism were present.</p> <p>Default: <code>True</code></p>"},{"location":"settings/#file_format","title":"<code>file_format</code>","text":"<p>Command-line option: <code>--file-format</code></p> <p>The output file format. Options are: <code>json</code>, <code>yaml</code>, and <code>txt</code>.</p> <p>Note, <code>write_mesh=True</code> is not supported using the <code>txt</code> format.</p> <p>Default: <code>json</code></p>"},{"location":"settings/#write_input","title":"<code>write_input</code>","text":"<p>Command-line option: <code>--write-input/--no-write-input</code></p> <p>Whether to write the input settings to a file called <code>amset_settings.yaml</code>.</p> <p>Default: <code>False</code></p>"},{"location":"settings/#write_mesh","title":"<code>write_mesh</code>","text":"<p>Command-line option: <code>--write-mesh/--no-write-mesh</code></p> <p>Whether to write the full k-dependent properties to disk. Properties include the band energy, velocity and scattering rate. Only k-points in the irreducible wedge are included.</p> <p>Note: for large values of interpolation_factor his option can use a large amount of disk space.</p> <p>Default: <code>False</code></p>"},{"location":"settings/#print_log","title":"<code>print_log</code>","text":"<p>Command-line option: <code>--print-log/--no-log</code></p> <p>Whether to print log messages.</p> <p>Default: <code>True</code></p>"},{"location":"transport-properties/","title":"Transport Properties","text":""},{"location":"transport-properties/#transport-properties","title":"Transport Properties","text":"<p>Electronic transport properties \u2014 namely, conductivity, Seebeck coefficient, and electronic component of thermal conductivity \u2014 are calculated through the Onsager coefficients. The spectral conductivity is calculated as <p>\u03a3\u03b1\u03b2(\u03b5)=\u2211n\u222bdk8\u03c03vnk,\u03b1vnk,\u03b2\u03c4nk\u03b4(\u03b5\u2212\u03b5nk), \\Sigma_{\\alpha\\beta}(\\varepsilon) =  \\sum_n \\int \\frac{\\mathrm{d}{\\mathbf{k}}}{8\\pi^3} v_{n\\mathbf{k},\\alpha}v_{n\\mathbf{k},\\beta}\\tau_{n\\mathbf{k}} \\delta{\\left(\\varepsilon - \\varepsilon_{n\\mathbf{k}} \\right )}, \u03a3\u03b1\u03b2\u200b(\u03b5)=n\u2211\u200b\u222b8\u03c03dk\u200bvnk,\u03b1\u200bvnk,\u03b2\u200b\u03c4nk\u200b\u03b4(\u03b5\u2212\u03b5nk\u200b),</p> where \u03b1\\alpha\u03b1 and \u03b2\\beta\u03b2 denote Cartesian coordinates, \u03b5nk\\varepsilon_{n\\mathbf{k}}\u03b5nk\u200b and vnk,\u03b1v_{n\\mathbf{k},\\alpha}vnk,\u03b1\u200b are the energy and group velocity of band index nnn and wave vector k\\mathbf{k}k, respectively. The spectral conductivity can be used to compute the moments of the generalized transport coefficients <p>L\u03b1\u03b2n=e2\u222b\u03a3\u03b1\u03b2(\u03b5)(\u03b5\u2212\u03b5F)n[\u2212\u2202f0\u2202\u03b5]d\u03b5, \\mathcal{L}^n_{\\alpha\\beta} = e^2 \\int \\Sigma_{\\alpha\\beta}(\\varepsilon) (\\varepsilon - \\varepsilon_\\mathrm{F})^n \\left [ -\\frac{\\partial f^0}{\\partial \\varepsilon} \\right ] \\mathrm{d}{\\varepsilon}, L\u03b1\u03b2n\u200b=e2\u222b\u03a3\u03b1\u03b2\u200b(\u03b5)(\u03b5\u2212\u03b5F\u200b)n[\u2212\u2202\u03b5\u2202f0\u200b]d\u03b5,</p> where eee is the electron charge and \u03b5F\\varepsilon_\\mathrm{F}\u03b5F\u200b is the Fermi level at a certain doping concentration and temperature TTT. The Fermi\u2013Dirac distribution is given by <p>fnk0=1exp\u2061[(\u03b5nk\u2212\u03b5F)/kBT]+1,     f^0_{n\\mathbf{k}} = \\frac{1}{\\exp\\left[{(\\varepsilon_{n\\mathbf{k}}-\\varepsilon_\\mathrm{F})/k_\\mathrm{B}T} \\right] + 1}, fnk0\u200b=exp[(\u03b5nk\u200b\u2212\u03b5F\u200b)/kB\u200bT]+11\u200b,</p> where kBk_\\mathrm{B}kB\u200b is the Boltzmann constant. Electrical conductivity (\u03c3\\sigma\u03c3), Seebeck coefficient (SSS), and the charge carrier contribution to thermal conductivity (\u03ba\\kappa\u03ba) are obtained as <p>\u03c3\u03b1\u03b2=L\u03b1\u03b20,S\u03b1\u03b2=1eTL\u03b1\u03b21L\u03b1\u03b20,\u03ba\u03b1\u03b2=1e2T[(L\u03b1\u03b21)2L\u03b1\u03b20\u2212L\u03b1\u03b22]. \\begin{aligned} \\sigma_{\\alpha\\beta} ={}&amp; \\mathcal{L}_{\\alpha\\beta}^0, \\\\ S_{\\alpha\\beta} ={}&amp; \\frac{1}{eT} \\frac{\\mathcal{L}_{\\alpha\\beta}^1}{\\mathcal{L}_{\\alpha\\beta}^0}, \\\\ \\kappa_{\\alpha\\beta} = {}&amp; \\frac{1}{e^2T} \\left [ \\frac{(\\mathcal{L}_{\\alpha\\beta}^1)^2}{\\mathcal{L}_{\\alpha\\beta}^0} - \\mathcal{L}_{\\alpha\\beta}^2 \\right ] . \\end{aligned} \u03c3\u03b1\u03b2\u200b=S\u03b1\u03b2\u200b=\u03ba\u03b1\u03b2\u200b=\u200bL\u03b1\u03b20\u200b,eT1\u200bL\u03b1\u03b20\u200bL\u03b1\u03b21\u200b\u200b,e2T1\u200b[L\u03b1\u03b20\u200b(L\u03b1\u03b21\u200b)2\u200b\u2212L\u03b1\u03b22\u200b].\u200b</p></p>"},{"location":"using/","title":"Getting started","text":"<p>AMSET can be used from the command-line as a standalone program or from the Python API. In both cases, the primary input is a <code>vasprun.xml</code> file from a uniform band structure calculation (i.e., on a regular k-point grid and not along high-symmetry lines).</p> <p>Temperature and doping ranges, scattering rates, and calculation parameters are controlled through the settings file. More details on the available settings are provided in the settings section of the documentation. An example settings file is given here.</p>"},{"location":"using/#from-the-command-line","title":"From the command-line","text":"<p>AMSET can be run from the command-line using the <code>amset run</code> command. The help menu listing a summary of the command-line options can be printed using:</p> <pre><code>amset run -h\n</code></pre> <p>By default, AMSET will look for a <code>vasprun.xml</code> file and <code>settings.yaml</code> file in the current directory. A different directory can be specified using the <code>directory</code> option, e.g.:</p> <pre><code>amset run --directory path/to/files\n</code></pre> <p>Any settings specified via the command line will override those in the settings file. For example, the interpolation factor can be easily controlled using:</p> <pre><code>amset run --interpolation-factor 20\n</code></pre> <p>Obtaining best performance</p> <p>To obtain the best performance, it is recommended to run <code>export OMP_NUM_THREADS=1</code> before running AMSET. Use the <code>nworkers</code> setting in the settings file if you want to run AMSET using multiple cores.</p>"},{"location":"using/#from-the-python-api","title":"From the Python API","text":"<p>Greater configurability is available when running AMSET from the Python API. For example, the following snippet will look for a <code>vasprun.xml</code> and <code>settings.yaml</code> file in the current directory, then run AMSET.</p> <pre><code>from amset.core.run import Runner\n\nif __name__ == \"__main__\":\n    runner = Runner.from_directory(directory='.')\n    amset_data = runner.run()\n</code></pre> <p>The API allows for easy convergence of parameters. For example, the following snippet will run AMSET using multiple interpolation factors.</p> <pre><code>from amset.core.run import Runner\n\nsettings = {'interpolation_factor': 5}\n\nif __name__ == \"__main__\":\n    outputs = []\n    for i_factor in range(10, 100, 10):\n        settings[\"interpolation_factor\"] = i_factor\n\n        runner = Runner.from_directory(directory='.', settings_override=settings)\n        outputs.append(runner.run())\n</code></pre> <p>When running AMSET from the API, it is not necessary to use a settings file at all. Instead the settings can be passed as a dictionary. For example:</p> <pre><code>from amset.core.run import Runner\n\nsettings = {\n    \"interpolation_factor\": 150,\n    \"doping\": [1e15, 1e16, 1e17, 1e18],\n    \"temperatures\": [300],\n\n    \"deformation_potential\": (6.5, 6.5),\n    \"elastic_constant\": 190,\n    \"static_dielectric\": 13.1,\n}\n\nif __name__ == \"__main__\":\n    runner = Runner.from_vasprun(\"vasprun.xml.gz\", settings)\n    amset_data = runner.run()\n</code></pre>"}]}